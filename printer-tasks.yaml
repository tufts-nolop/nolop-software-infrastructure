---
- hosts: printers
  remote_user: pi
  vars_prompt:
    - name: ddns_api_key
      prompt: Enter the DNS API key
  tasks:
    - name: Add users
      ansible.builtin.copy:
        src: ./users.yaml
        dest: /home/pi/.octoprint/users.yaml
        owner: pi
        group: pi
        mode: '0600'
    - name: Install avrdude
      become: yes
      apt:
        name: avrdude
        state: present
    - name: Check Octoprint and plugins version
      shell: /home/pi/oprint/bin/octoprint plugins softwareupdate:check && cat /etc/octopi_version
      register: command_output
    - debug:
        var: command_output.stdout_lines
    - name: Add periodic task to broadcast hostname and IP via UDP
      ansible.builtin.cron:
        name: "broadcast-ip"
        minute: "*/5"
        job: "/home/pi/broadcast-ip.sh"
    - name: Add broadcast script
      ansible.builtin.copy:
        src: ./broadcast-ip.sh
        dest: /home/pi/broadcast-ip.sh
        owner: pi
        group: pi
        mode: '0744'
    - name: Add periodic task to update DNS record dynamically if IP changes
      ansible.builtin.cron:
        name: "ddns-update-ip"
        minute: "*/5"
        job: "python3 /home/pi/ddns-update-ip.py"
    - name: Add dynamic DNS script
      ansible.builtin.copy:
        src: ./ddns-update-ip.py
        dest: /home/pi/ddns-update-ip.py
        owner: pi
        group: pi
        mode: '0744'
    - name: Add dynamic DNS config file
      ansible.builtin.copy:
        src: ./ddns-config.txt
        dest: /home/pi/ddns-config.txt
        owner: pi
        group: pi
        mode: '0644'
    - name: Ensure DNS API key is present in dynamic DNS config file
      ansible.builtin.lineinfile:
        path: /home/pi/ddns-config.txt
        line: "apikey = {{ ddns_api_key }}"
        insertafter: "# gandi.net API key"
    - name: Add Let's Encrypt Certbot service file
      become: yes
      ansible.builtin.copy:
        src: ./certbot.service
        dest: /lib/systemd/system/certbot.service
        owner: root
        group: root
        mode: '0644'
    - name: Add Let's Encrypt Certbot timer file
      become: yes
      ansible.builtin.copy:
        src: ./certbot.timer
        dest: /lib/systemd/system/certbot.timer
        owner: root
        group: root
        mode: '0644'
    - name: Enable service certbot and ensure it is not masked
      become: yes
      ansible.builtin.systemd:
        name: certbot
        enabled: true
        masked: no
        state: started
