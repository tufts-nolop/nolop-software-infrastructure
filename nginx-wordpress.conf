server {
        listen 80 default_server;
        listen [::]:80 default_server;

        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.php index.html index.htm index.nginx-debian.html;

        server_name _;

        location ~* \.(jpe?g|png|gif|ico|css|js)$ {
                try_files $uri $uri/ =404;
        }

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                rewrite ^/(.*)$ /index.php?$1;
                #try_files $uri $uri/ /index.php?q=$uri&$args =404;
        }

        # pass PHP scripts to FastCGI server
        #
        location ~ \.php$ {
                include snippets/fastcgi-php.conf;

                # With php-fpm (or other unix sockets):
                fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
        }
}

server {

        # SSL configuration
        #
        listen 443 ssl ;
        listen [::]:443 ssl ;

        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.php index.html index.htm index.nginx-debian.html;
        server_name nolop.org; # managed by Certbot

        location ~* \.(jpe?g|png|gif|ico|css|js)$ {
                try_files $uri $uri/ =404;
        }

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                rewrite ^/(.*)$ /index.php?$1;
                #try_files $uri $uri/ /index.php?q=$uri&$args =404;
        }

        # pass PHP scripts to FastCGI server
        #
        location ~ \.php$ {
                include snippets/fastcgi-php.conf;

                # With php-fpm (or other unix sockets):
                fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
        }


    ssl_certificate /etc/letsencrypt/live/nolop.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/nolop.org/privkey.pem; # managed by Certbot
}
